{"version":3,"sources":["components/MainContainer/Main/Main.module.css","components/Header/Header.module.css","App.module.css","reportWebVitals.js","components/Api/api.js","redux/reducers/doggyReducer.js","redux/store.js","components/Header/Header.jsx","assets/preloader.svg","components/common/Preloader.jsx","components/common/ScrollToTop.jsx","components/MainContainer/Main/Main.jsx","components/MainContainer/MainContainer.jsx","AppContainer.jsx","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","baseURL","dogAPI","get","breed","subBreed","SET_DOGGIES","SET_BREED","SET_SUB_BREAD","SET_BREED_IMAGES","initialState","doggiesData","dogBreed","dogSubBreed","breedImages","setBreedImages","type","payload","doggyReducer","state","action","rootReducer","combineReducers","doggy","store","createStore","composeWithDevTools","applyMiddleware","thunk","Header","dogData","dispatch","useDispatch","className","styles","header","select","onChange","e","target","value","split","setSubBreed","placeholder","Object","entries","map","arrayOfSubBread","length","subBread","Preloader","style","display","justifyContent","alignSelf","position","top","width","height","zIndex","src","preloader","alt","ScrollToTop","useState","isVisible","setIsVisible","useEffect","toggleVisibility","window","pageYOffset","addEventListener","removeEventListener","onClick","scrollTo","behavior","background","color","borderRadius","textAlign","padding","bottom","right","cursor","Main","container","item","i","image","MainContainer","useSelector","a","response","data","message","fetchBreedImagesData","App","app","AppContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff721a3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Main_container__2lu24\",\"item\":\"Main_item__OXgRW\",\"image\":\"Main_image__Ib4go\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__10kfi\",\"select\":\"Header_select__32uBo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3GFgb\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: `https://dog.ceo/api/`,\r\n  // headers: { Accept: 'application/json' },\r\n})\r\n\r\nexport const dogAPI = {\r\n  //get all dog breeds\r\n  getAllBreeds() {\r\n    return instance.get('breeds/list/all')\r\n  },\r\n  //get url of all images of the selected breed\r\n  getBreedImages(breed) {\r\n    return instance.get(`/breed/${breed}/images`)\r\n  },\r\n  //get url of all images sub-breed of the selected\r\n  getSubBreedImages(breed, subBreed) {\r\n    return instance.get(`/breed/${breed}/${subBreed}/images`)\r\n  },\r\n}\r\n","import { dogAPI } from './../../components/Api/api'\r\n\r\nconst SET_DOGGIES = 'SET_DOGGIES' //set data of all breeds\r\nconst SET_BREED = 'SET_BREED' // set data of the selected breed\r\nconst SET_SUB_BREAD = 'SET_SUB_BREAD' // set data of the selected sub-breed\r\nconst SET_BREED_IMAGES = 'SET_BREED_IMAGES' //set URLs data of the selected breed\r\n\r\nconst initialState = {\r\n  doggiesData: null, //data of all breeds\r\n  dogBreed: 'affenpinscher', //data of the selected breed\r\n  dogSubBreed: null, //data of the selected sub-breed\r\n  breedImages: null, //array of URLs of the selected breed\r\n}\r\n\r\nconst doggyReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_DOGGIES: {\r\n      return {\r\n        ...state,\r\n        doggiesData: action.payload,\r\n      }\r\n    }\r\n    case SET_BREED: {\r\n      return {\r\n        ...state,\r\n        dogBreed: action.payload,\r\n      }\r\n    }\r\n    case SET_SUB_BREAD: {\r\n      return {\r\n        ...state,\r\n        dogSubBreed: action.payload,\r\n      }\r\n    }\r\n    case SET_BREED_IMAGES: {\r\n      return {\r\n        ...state,\r\n        breedImages: action.payload,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst setDoggiesData = (doggiesData) => ({ type: SET_DOGGIES, payload: doggiesData })\r\nexport const setBreed = (breed) => ({ type: SET_BREED, payload: breed })\r\nexport const setSubBreed = (dogSubBreed) => ({ type: SET_SUB_BREAD, payload: dogSubBreed }) //установить выбранную подпороду\r\nconst setBreedImages = (breedImages) => ({ type: SET_BREED_IMAGES, payload: breedImages })\r\n\r\n//fetch data of all breeds and set to state\r\nexport const fetchDoggiesData = () => {\r\n  return async (dispatch) => {\r\n    const response = await dogAPI.getAllBreeds()\r\n    dispatch(setDoggiesData(response.data.message))\r\n  }\r\n}\r\n\r\n//fetch URLs data of the selected breed and set to state\r\nexport const fetchBreedImagesData = (breed) => {\r\n  return async (dispatch) => {\r\n    let response = await dogAPI.getBreedImages(breed)\r\n    dispatch(setBreedImages(response.data.message))\r\n  }\r\n}\r\n\r\n//fetch URLs data of the selected sub-breed and set to state\r\nexport const fetchSubBreedImagesData = (breed, subBreed) => {\r\n  return async (dispatch) => {\r\n    let response = await dogAPI.getSubBreedImages(breed, subBreed)\r\n    dispatch(setBreedImages(response.data.message))\r\n  }\r\n}\r\n\r\nexport default doggyReducer\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport doggyReducer from './reducers/doggyReducer'\r\n\r\nlet rootReducer = combineReducers({\r\n  doggy: doggyReducer,\r\n})\r\n\r\n//create store with redux extension, and with middle layer redux-thunk\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","import styles from './Header.module.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setBreed, setSubBreed } from './../../redux/reducers/doggyReducer'\r\n\r\nexport const Header = ({ dogData, dogBreed, dogSubBreed }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      <select\r\n        className={styles.select}\r\n        onChange={(e) => {\r\n          dispatch(setBreed(e.target.value.split(' ')[0])) //gave a breed of dog(first word)\r\n          dispatch(setSubBreed(e.target.value.split(' ')[1])) //gave a sub-breed of dog\r\n        }}\r\n        placeholder='Choose breed'\r\n        value={dogSubBreed ? dogBreed + ' ' + dogSubBreed : dogBreed}>\r\n        {/* if there is a sub-breed, then value 'breed sub-breed', else only 'breed' */}\r\n\r\n        {/* mapped data of all breeds (key: value = breed: arrayOfSubBreed) */}\r\n        {Object.entries(dogData).map(function ([breed, arrayOfSubBread]) {\r\n          // if the sub-breed array is empty, then show only the breed\r\n          if (arrayOfSubBread.length === 0) {\r\n            return (\r\n              <option key={breed} value={breed}>\r\n                {breed}\r\n              </option>\r\n            )\r\n          }\r\n          //else mapped array of sub-breeds and display the name 'breed sub-breed' for each iteration\r\n          return (\r\n            <>\r\n              {arrayOfSubBread.map((subBread) => {\r\n                return (\r\n                  <option key={subBread} value={breed + ' ' + subBread}>\r\n                    {breed + ' ' + subBread}\r\n                  </option>\r\n                )\r\n              })}\r\n            </>\r\n          )\r\n        }, dogData)}\r\n      </select>\r\n    </header>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/preloader.a6f61220.svg\";","import preloader from './../../assets/preloader.svg'\r\n\r\nlet Preloader = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n        position: 'absolute',\r\n        top: '20%',\r\n        width: '100px',\r\n        height: '100px',\r\n        zIndex: 999,\r\n      }}>\r\n      <img src={preloader} alt='preloader' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Preloader\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nexport default function ScrollToTop() {\r\n  const [isVisible, setIsVisible] = useState(false)\r\n\r\n  // Top: 0 takes us all the way back to the top of the page\r\n  // Behavior: smooth keeps it smooth!\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth',\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Button is displayed after scrolling for 400 pixels\r\n    const toggleVisibility = () => {\r\n      if (window.pageYOffset > 400) {\r\n        setIsVisible(true)\r\n      } else {\r\n        setIsVisible(false)\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', toggleVisibility)\r\n\r\n    return () => window.removeEventListener('scroll', toggleVisibility)\r\n  }, [])\r\n\r\n  return (\r\n    <div className='scroll-to-top'>\r\n      {isVisible && (\r\n        <div\r\n          onClick={scrollToTop}\r\n          style={{\r\n            width: '50px',\r\n            background: 'rgba(0, 139, 139, 0.483)',\r\n            color: 'white',\r\n            borderRadius: '50%',\r\n            textAlign: 'center',\r\n            padding: '0 5px',\r\n            position: 'fixed',\r\n            bottom: '20px' /* отступ кнопки от нижнего края страницы*/,\r\n            right: '20px',\r\n            cursor: 'pointer',\r\n          }}>\r\n          <h3>&#708;</h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import styles from './Main.module.css'\r\nimport ScrollToTop from './../../common/ScrollToTop'\r\n\r\nexport const Main = ({ breedImages }) => {\r\n  return (\r\n    <main className={styles.container}>\r\n      {/*iterates over each element in the array of URL's and draws the images*/}\r\n      {breedImages.map((item, i) => {\r\n        return (\r\n          <div className={styles.item}>\r\n            <img className={styles.image} src={item} alt='sweet dog' key={i}></img>\r\n          </div>\r\n        )\r\n      })}\r\n      <ScrollToTop />\r\n    </main>\r\n  )\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchBreedImagesData } from '../../redux/reducers/doggyReducer'\r\nimport Preloader from './../common/Preloader'\r\nimport { Main } from './Main/Main'\r\nimport { fetchSubBreedImagesData } from './../../redux/reducers/doggyReducer'\r\n\r\nexport const MainContainer = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const dogBreed = useSelector((state) => state.doggy.dogBreed) //contains data about the selected breed\r\n  const dogSubBreed = useSelector((state) => state.doggy.dogSubBreed) //contains data about the selected sub-breed\r\n  const breedImages = useSelector((state) => state.doggy.breedImages) //contains data about URL's of the selected breed\r\n\r\n  useEffect(() => {\r\n    //if there are sub-breeds, then we request images for the sub-breed, else - for the breed\r\n    dogSubBreed\r\n      ? dispatch(fetchSubBreedImagesData(dogBreed, dogSubBreed)) //fetch images of the selected sub-breed\r\n      : dispatch(fetchBreedImagesData(dogBreed)) //fetch images of the selected breed\r\n  }, [dispatch, dogBreed, dogSubBreed])\r\n\r\n  //if there are no images in the state, show preloader\r\n  if (!breedImages) {\r\n    return <Preloader />\r\n  }\r\n  return <Main dogBreed={dogBreed} breedImages={breedImages} />\r\n}\r\n","import styles from './App.module.css'\nimport { Header } from './components/Header/Header'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect } from 'react'\nimport { fetchDoggiesData } from './redux/reducers/doggyReducer'\nimport Preloader from './components/common/Preloader'\nimport { MainContainer } from './components/MainContainer/MainContainer'\n\nconst AppContainer = () => {\n  const dispatch = useDispatch()\n\n  const dogData = useSelector((state) => state.doggy.doggiesData) //contains data of all dog breeds\n  const dogBreed = useSelector((state) => state.doggy.dogBreed) //contains data about the selected breed\n  const dogSubBreed = useSelector((state) => state.doggy.dogSubBreed) //contains data about the selected sub-breed\n\n  //fetch data of all breeds\n  useEffect(() => {\n    dispatch(fetchDoggiesData())\n  }, [dispatch])\n\n  //display component only if data is loaded\n  if (!dogData) {\n    return <Preloader />\n  }\n  return <App dogData={dogData} dogBreed={dogBreed} dogSubBreed={dogSubBreed} />\n}\n\n//App component\n\nconst App = ({ dogData, dogBreed, dogSubBreed }) => {\n  return (\n    <div className={styles.app}>\n      <Header dogData={dogData} dogBreed={dogBreed} dogSubBreed={dogSubBreed} />\n      <MainContainer />\n    </div>\n  )\n}\n\nexport default AppContainer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport AppContainer from './AppContainer'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}